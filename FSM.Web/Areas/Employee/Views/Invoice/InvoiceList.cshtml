@model FSM.Web.Areas.Employee.ViewModels.InvoiceListViewModel
@using GridMvc.Html
@{
    ViewBag.Title = "InvoiceList";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@section scripts{
    <script>
        var FSM = {};
        FSM.URL = '@Url.Action("InvoiceList", "Invoice", new { @area = "Employee"})';
        FSM.JobId='@Model.invoiceSearchViewModel.JobId';
        FSM.SelectedVal=@Model.invoiceSearchViewModel.PageSize;
        FSM.EditInvoice='@Url.Action("SaveInvoiceInfo", "Invoice", new { @area = "Employee" })';
        FSM.HasGridRecords='@Model.createInvoiceViewModel.Count()'
        var success='@TempData["Message"]';
        if (success != "" && success != undefined)
        {
            FSM.Message=success;
        }
        else
        {
            FSM.Message="";
        }
    </script>
}

<section class="dashboard_section">
    <div class="dashboard_right_block">
        <div class="employee_table">
            <div class="alert alert-success jobalert" style="display:none">
                <strong>Success!</strong> Indicates a successful or positive action.
            </div>
            <div class="list_heading padding20">
                <h2>Invoice/Quote </h2>
            </div>

            <div class="col-sm-12">
                <div class="form-group form_width List_Width" style="float:left">
                    @Html.Partial("_InvoiceListListSearch", Model.invoiceSearchViewModel)
                    <div class="clearfix"></div>
                </div>
            </div>
            <div class="emp_table padding20">
                <div class="drop_head_tab">
                    <div class="table-responsive">
                        @Html.Grid(Model.createInvoiceViewModel).SetRowCssClasses(
    item => item.Id == Guid.Empty ? string.Empty : "cssEditInvoice").Columns(
    columns =>
    {
        columns.Add(model => model.Id, true);
        columns.Add(model => model.JobId).Titled("Job No").Titled("Job No").SetWidth(10).Sanitized(false).Encoded(false)
                          .RenderValueAs(model => CustomRenderingOfColumn(model.JobId, model.Id)).Filterable(false);
        //columns.Add(model => model.InvoiceNo).Titled("Invoice/Quote No.");
        columns.Add(model => model.InvoiceNo).Titled("Invoice/Quote No.");
        //columns.Add(model => model.DisplayType).Titled("Type");
        //columns.Add(model => model.CustomerLastName).Titled("Customer Filename");
        columns.Add(model => model.SiteAddress).Titled("Site Filename");
        columns.Add(model => model.InvoiceDate).Format("{0:dd/MM/yyyy}").Titled("Invoice Date");
        // columns.Add(model => model.CurrentJobType).Titled("JobType");
        columns.Add(model => model.InvoiceType).Titled("InvoiceType");
        columns.Add(model => model.OtrwAssignedName).Titled("Assigned To");
        columns.Add(model => model.paidStatus).Titled("Status");
        columns.Add(model => model.DisplaySentStatus).Titled("Sent Status");
        columns.Add(model => model.Price).Titled("Amount");
        //columns.Add(model => model.ContactName).Titled("Contact Name");
        //columns.Add(model => model.PhoneNo).Titled("Phone No");

        // columns.Add(model => model.IsApproved).Titled("Is Approved");
        //columns.Add()
        //.Encoded(false)
        //.Sanitized(false)
        //.SetWidth(30)
        //.RenderValueAs(model => Html.ActionLink("Preview", "Export", "Invoice", new { area = "Employee", Id = model.Id },
        // new { @class = " btn btn-default " })).Filterable(false).Titled("Preview");

        //columns.Add()
        //.Encoded(false)
        //.Sanitized(false)
        //.SetWidth(30)
        //.RenderValueAs(model => Html.ActionLink("Print", "InvoiceExport", "Invoice", new {area = "Employee", id = model.Id },
        // new { @class = " btn btn-default ", @target = "_blank" })).Filterable(false).Titled("Print");

        //columns.Add()
        //.Encoded(false)
        //.Sanitized(false)
        //.SetWidth(30)
        //.RenderValueAs(model => (model.SentStatus == 1) ? (Html.ActionLink("Resend", "SendCustomerEmail", new { area = "Employee", Id = model.Id }, new { @class = " btn btn-default ", @Id = model.Id })) : (Html.ActionLink("Send", "SendCustomerEmail", new { area = "Employee", Id = model.Id }, new { @class = " btn btn-default ", @Id = model.Id }))).Filterable(false).Titled("Action");
        columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(30)
        .RenderValueAs(model => Html.ActionLink("Edit", "SaveInvoiceInfo", new { Id = model.Id }, new { @class = "btn btn-default " })).Filterable(false).Titled("Edit");

        columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(30)
        .RenderValueAs(model => Html.ActionLink("Delete", "", "", new { Id = model.Id.ToString() }, new { @class = "btn btn-default", @type = "button", href = "javascript:void(0)", onclick = "DeleteInvoice ('" + model.Id.ToString() + "');" })).Filterable(false).Titled("Delete");
    }
                           ).WithPaging(Model.invoiceSearchViewModel.PageSize).Sortable(true)


                        <div style="float: left;">
                            <label class="recordCount">Total Record: @Model.invoiceSearchViewModel.TotalCount</label>
                        </div>
                        <div style="float: right;">
                            <label>Page Size</label>
                            @Html.DropDownList("ddPageSize", new List<SelectListItem>
                           {
                             new SelectListItem { Text="5",Value="5"},
                             new SelectListItem { Text = "10", Value = "10" },
                             new SelectListItem { Text = "15", Value = "15" },
                             new SelectListItem { Text = "20", Value = "20" },
                             new SelectListItem { Text = "25", Value = "25" },
                             new SelectListItem { Text = "30", Value = "30" }
                           }, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
            </div>
        </div><!--emp_table-->
    </div>

</section>
@helper CustomRenderingOfColumn(int? InvoiceNumber, Guid Invoiceid)
{
    <div Class="Quickbtngrid" Invoiceid="@Invoiceid">@InvoiceNumber<a class="qucikbtn" style="color:dodgerblue;margin-left:10%">></a></div>
//@Html.ActionLink(""+message+"(" + UnReadMsg + ")", "", new { EmployeeId = EmployeeId }, new { @class = "Chatbtngrid @*msgColor*@", href = "javascript:void(0)", @EmployeeId = EmployeeId });
}
<script src="~/Scripts/jquery-1.12.4.js"></script>
<script src="~/Areas/Employee/Scripts/InvoiceList.Js"></script>
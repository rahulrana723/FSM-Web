@model FSM.Web.Areas.Employee.ViewModels.JobPurChaseViewModel
@{
    ViewBag.Title = "AddEditJobPurchaseOrder";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@section scripts{
    <script>
        var FSM = {};
        FSM.JobId = '@ViewBag.JobId';
        FSM.OrderId = '@Model.PurchaseOrderByJobViewModel.ID';
        if (FSM.OrderId == '@Guid.Empty') {
            FSM.OrderId = "";
        }
    </script>
}

<section class="dashboard_section">
    <div class="dashboard_right_block">
        <div class="employee_table">
            <div class="customer_head_tab purchade_order_tab border_top">
                <h3>Add Job Purchase Order</h3>
                <div class="alert alert-success errormsgdiv" style="display:none">
                    <strong>Success!</strong>
                </div>
                <form>
                    @Html.Hidden("available", new { @id = "available" })
                    <div class="form-group">
                        <div class="form-group col-sm-2">
                            <label>Select Job Id</label>
                            @Html.DropDownListFor(model => model.getjobviewmodel.EmployeeJobId, new SelectList(Model.getjobviewmodel.employeeJobDetail, "EmployeeJobid", "Description"), new { @class = "form-control ddljobid" })
                          @*  @Html.DropDownListFor(m => m.getjobviewmodel.EmployeeJobId, Model.getjobviewmodel.JobDetailsList, "(Select)", new { @class = "form-control ddljobid", placeholder = "Search Job" })*@
                        </div>
                        <div class="form-group col-sm-2">
                            <label>Supplier</label>
                            @Html.DropDownListFor(M => M.PurchaseOrderByJobViewModel.SupplierID, new SelectList(Model.PurchaseOrderByJobViewModel.SupplierJobList, "ID", "Name"), "(Select)", new { @class = "form-control ddlsupplier top_space" })
                            @Html.ValidationMessageFor(model => model.PurchaseOrderByJobViewModel.SupplierID, "", new { @class = "text-danger errorsupplier" })
                        </div>

                        <div class="form-group col-sm-2">
                            <label>Purchase Order No</label>
                            @Html.TextBoxFor(m => m.PurchaseOrderByJobViewModel.PurchaseOrderNo, new { @class = "form-control Create_Customer", placeholder = " ", @disabled = "disabled" })
                        </div>
                    </div>
                    <div class="form-group col-sm-2">
                        <label>Purchase Item</label>
                        @Html.TextBoxFor(M => M.PurchaseOrderITemByJobViewModel.PurchaseItem, new { @class = "form-control ddlstockname " })
                        @Html.ValidationMessageFor(model => model.PurchaseOrderITemByJobViewModel.StockID, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-sm-2">
                        <label>Unit Measure</label>
                        @Html.TextBoxFor(M => M.PurchaseOrderITemByJobViewModel.UnitOfMeasure, new { @id = "UnitOfMeasure", @class = "form-control  " })
                        @Html.ValidationMessageFor(model => model.PurchaseOrderITemByJobViewModel.UnitOfMeasure, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-sm-2">
                        <label>Quantity</label>
                        @Html.TextBoxFor(M => M.PurchaseOrderITemByJobViewModel.Quantity, new { @id = "Quantity", @class = "form-control  " })
                        @Html.ValidationMessageFor(model => model.PurchaseOrderITemByJobViewModel.Quantity, "", new { @class = "errordiv", @style = "top: 0px; " })
                    </div>

                    <div class="form-group col-sm-2">
                        <label>Price</label>
                        @Html.TextBoxFor(m => m.PurchaseOrderITemByJobViewModel.Price, new { @id = "Price", @class = "stockprice form-control", placeholder = " " })
                        @Html.ValidationMessageFor(model => model.PurchaseOrderITemByJobViewModel.Price, "", new { @class = " text-danger" })
                    </div>

                    <div class="form-group col-sm-2">
                        <div class="top_space2">
                            <input type="button" value="Add Item" class="btn btn-default black-btn  btnAddstockitem" id="btnaddstockitems" />
                            <a class="btn black-btn btn-default btnclear btnAddstockitem">
                                Clear
                            </a>
                        </div>
                    </div>

                </form>

            </div><!--customer_head_tab-->
            <div class="clearfix"></div>
            <div id="divstockItems">
                <div class="customer_table padding20 puchase_tab">
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered tblstock">
                            <thead>
                                <tr>
                                    <th style="display:none">StockID</th>
                                    <th>Purchase Item</th>
                                    <th>Unit Measure</th>
                                    <th>Quantity</th>
                                    <th>Price</th>
                                    <th style="display:none">Available</th>
                                    <th>Edit</th>
                                    <th>Delete</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div><!--emp_table-->
            </div>
            <div class="customer_head_tab purchade_order_tab">
                <form>
                    <div class="form-group col-sm-3">
                        <label>Cost</label>
                        @Html.TextBoxFor(M => M.PurchaseOrderByJobViewModel.Cost, new { @id = "Cost", @class = "form-control  ", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.PurchaseOrderByJobViewModel.Cost, "", new { @class = "text -danger", @style = "top: 0px; " })
                    </div>

                    <div class="form-group col-sm-6">
                        <label>Description</label>
                        @Html.Raw(HttpUtility.HtmlDecode(Html.TextAreaFor(M => M.PurchaseOrderByJobViewModel.Description, new { @class = "form-control description textarea_height" }).ToHtmlString()))
                        @Html.ValidationMessageFor(model => model.PurchaseOrderByJobViewModel.Description, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-sm-3 col-sm-offset-4">
                        <div class="top_space3">
                            <input type="button" value="Add Purchase Order" class="btn btn-default black-btn   btnaddpurchaseorder btnAddstockitem" />
                            <a class="btn black-btn btn-default btnAddstockitem" type="button" href="@Url.Action("ViewJobsPurchaseOrder","Job", new { Area = "Employee",JobId=ViewBag.JobId})">
                                Cancel
                            </a>
                        </div>
                    </div>

                </form>

            </div>
        </div>

    </div>
</section>
<script src="~/Scripts/jquery-1.12.4.js"></script>
<script src="~/Areas/Employee/Scripts/EditJobPurchaseOrder.Js"></script>
@model FSM.Web.Areas.Employee.ViewModels.SupportListViewModel
@using GridMvc.Html
@using FSM.Web.Common;
@{
    ViewBag.Title = "SupportJobList";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@section scripts{
    <script>
        var FSM = {};
        FSM.URL = '@Url.Action("SupportJobList", "Job", new { @area = "Employee" })';
        FSM.SelectedVal=@Model.supportJobSearchViewModel.PageSize;
    </script>
}

<section class="dashboard_section">
    <div class="dashboard_right_block outer_padding">
        <div class="list_heading">
            <h2>Support Job List </h2>
        </div>
        <br /><br />
        <div class="col-sm-12">
            <div class="form-group form_width List_Width" style="float:left">
                @Html.Partial("_SupportJobListSearch", Model.supportJobSearchViewModel)
                <div class="clearfix"></div>
            </div>
        </div>
        @Html.HiddenFor(i => i.supportJobViewModel.FirstOrDefault().SupportJobId, new {@class="supportid"});
        <div class="row">
            <div class="col-sm-12">
                <div class="employee_table">
                    <div class="emp_table padding20">
                        <div class="alert alert-success jobalert" style="display:none">
                            <strong>Success!</strong> Indicates a successful or positive action.
                        </div>
                        <div class="table-responsive">
                            <table class="table table-striped table-bordered">
                                @Html.Grid(Model.supportJobViewModel).Columns(
                        columns =>
                        {
                            columns.Add()
                           .Encoded(false)
                           .Sanitized(false)
                           .SetWidth(30)
                           .RenderValueAs(o => Html.RadioButton("select", false, new {name= "selectedAddressesIds",  @class = "selectJob", @jobid = o.JobId })).Filterable(false).Titled("Check");
                            columns.Add(model => model.JobId).Titled("Job Id");
                            columns.Add(model => model.JobType).Titled("Type");
                            columns.Add(model => model.BookedDate).Titled("Booked Date");
                            columns.Add(model => model.InvoiceNo).Titled("Invoice No.");

                        }
                        ).WithPaging(Model.supportJobSearchViewModel.PageSize).Sortable(true)

                                <div style="float: right;">
                                    <label>Page Size</label>
                                    @Html.DropDownList("ddPageSize", new List<SelectListItem>
                                {
                                new SelectListItem { Text="5",Value="5"},
                                new SelectListItem { Text = "10", Value = "10" },
                                new SelectListItem { Text = "15", Value = "15" },
                                new SelectListItem { Text = "20", Value = "20" },
                                new SelectListItem { Text = "25", Value = "25" },
                                new SelectListItem { Text = "30", Value = "30" }
                                }, new { @class = "form-control" })
                                </div>

                            </table>
                        </div>
                        <div class="buttons text-center">
                            <input id="btnaddSupportJob" class="btn btn-default" type="button" value="Done" onclick="return checkSupportJobs();" />
                            <a class="btn btn-default" href="@Url.Action("ViewEmployeeJobs","Job", new { Area = "Employee" })">
                                Cancel
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
  </div>
</section>
<script src="~/Scripts/jquery-1.12.4.js"></script>
<script src="~/Areas/Employee/Scripts/SupportJobList.Js"></script>
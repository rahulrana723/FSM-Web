@model FSM.Web.Areas.Employee.ViewModels.JobsViewModel

@{
    Layout = null;
}
@{
    System.Web.Script.Serialization.JavaScriptSerializer serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
    serializer.MaxJsonLength = Int32.MaxValue;
}
<style>
    .lblstyle {
        width: 25% !important;
    }
</style>
<script>
    var FSM = {};
    FSM.FillSiteListUrl = '@Url.Action("SiteListByCustomer", "CustomerJob", new { @area = "Employee" })';
    FSM.GetCustomerUrl = '@Url.Action("CustomerByJobId", "CustomerJob", new { @area = "Employee" })';
    FSM.GetLinkJobUrl = '@Url.Action("LinkJobIdByCustomer", "CustomerJob", new { @area = "Employee" })';
    FSM.GetJobDocuments = '@Url.Action("GetJobDocuments", "CustomerJob", new { @area = "Employee" })';
    FSM.DownloadDocument = '@Url.Action("DownloadDocuments", "CustomerJob", new { @area = "Employee" })';
    FSM.GetWorkTypeOTRW = '@Url.Action("BindOTRWWithWorkType", "CustomerJob", new { @area = "Employee" })';
    FSM.DeletejobDocument = '@Url.Action("DeletejobDocumentByDocId", "CustomerJob", new { @area = "Employee" })';
    FSM.CustomerListVal = '@Html.Raw(serializer.Serialize(Model.CustomerList))';
    FSM.JobType = '@Model.JobType';
    FSM.ShowMsg = '@ViewBag.ShowMsg';
    FSM.CustomerGeneralInfoId = '@Model.CustomerGeneralInfoId';
    FSM.JobStatus = '@Model.Status';
    FSM.MultiplePeople = '@ViewBag.MultiplePeopleAssign';
    FSM.GetCustomer = '@Url.Action("GetCustomerList", "CustomerJob", new { @area = "Employee" })';
</script>

<script src="~/Scripts/js/bootstrap-multiselect.js"></script>
<link href="http://www.jqueryscript.net/css/jquerysctipttop.css" rel="stylesheet" type="text/css">
<link rel="stylesheet" href="http://netdna.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
<link href="~/Scripts/css/richtext.css" rel="stylesheet" />
<link href="~/Scripts/css/richtext.min.css" rel="stylesheet" />
<script src="~/Scripts/RichText/jquery.richtext.js"></script>
<script src="~/Scripts/RichText/jquery.richtext.min.js"></script>

<link href="~/Content/TimePicker/jquery.timepicker.css" rel="stylesheet" />
<script src="~/Content/TimePicker/jquery.timepicker.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $('.content1').richText();
        $('.content2').richText();
        $('.content3').richText();
    });
</script>

@*<script src="~/Scripts/tinymce/tinymce.min.js"></script>*@
@*<script src="~/Scripts/jquery-1.12.4.min.js"></script>*@
<script src="~/Areas/Employee/Scripts/AddJob.js"></script>
<link href="~/Content/css/bootstrap-multiselect.css" rel="stylesheet" />
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">


@using (Html.BeginForm("EditJob", "CustomerJob", new { @area = "Employee" }, FormMethod.Post, new
{
    @id = "frmSaveJob"
}))
{
    @Html.AntiForgeryToken()

    <div class="general_form">
        <h3>Job Details</h3>
        <div id="jobmsgDv" style="display:none; color:red;">
        </div>
        <div class="alert alert-success jobalert" style="display:none">
            <strong>Success!</strong> Indicates a successful or positive action.
        </div>
       
        <div class="form">
            @if (Model.Id != Guid.Empty && Model.Status==FSM.Web.FSMConstant.Constant.JobStatus.Completed && (Model.JobType == FSM.Web.FSMConstant.Constant.JobType.Quote || Model.JobType == FSM.Web.FSMConstant.Constant.JobType.ReQuote|| Model.JobType == FSM.Web.FSMConstant.Constant.JobType.CheckMeasure))
            {
                <span style="color:red" class="status-job">@Model.ApproveStatus</span>
                @Html.ActionLink("Change Status", null, null, new { @class = "change-status-job", Empjobid = Model.Id })
            }
            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.HiddenFor(m => m.OldDateBooked)
                        @Html.HiddenFor(m => m.CreatedBy)
                        @Html.HiddenFor(m => m.CreatedDate)
                        @Html.HiddenFor(m => m.Id, new { @id = "empJobId" })
                        @Html.HiddenFor(m => m.JobId)
                        @Html.HiddenFor(m => m.AssignTo)
                        @Html.HiddenFor(m => m.JobNo)
                        @Html.HiddenFor(m => m.IsDelete)
                        @Html.HiddenFor(m=>m.IsApproved,new { @id="approveStatus"})
                        @Html.HiddenFor(m => m.CurrentJobtype, new { @id = "currentJobtype" })
                        @Html.LabelFor(model => model.JobNo)
                        @Html.TextBoxFor(m => m.JobNo, new { @class = "form-control Create_Customer", placeholder = " ", @disabled = "disabled" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.JobType)
                        @Html.EnumDropDownListFor(m => m.JobType, "(Select)", htmlAttributes: new { @class = "form-control Create_Customer" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <div class="ui-widget">
                            @Html.LabelFor(model => model.CustomerGeneralInfoId)
                            @Html.DropDownListFor(m => m.CustomerInfoId, Model.CustomerList, "(Select)", new { @class = "form-control Create_Customer" })
                        </div>
                    </div>
                </div>
                <div class="sitelist col-md-3">
                    @Html.LabelFor(model => model.SiteId)
                    <div class="fillsitecombo">
                        @Html.Partial("_SiteList", Model)
                    </div>
                </div>
            </div>

            <div class="row">

                <div class="col-md-3">
                    <div class="form-group">
                        @Html.Label("Link Job")
                        @Html.DropDownListFor(m => m.LinkJobId, Model.LinkJobList, "(Select)", new { @class = "form-control Create_Customer" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.WorkType)
                        @Html.EnumDropDownListFor(m => m.WorkType, "(Select)", htmlAttributes: new { @id = "WorkType", @class = "form-control Create_Customer" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Status)
                        @Html.EnumDropDownListFor(m => m.Status, "(Select)", htmlAttributes: new { @class = "form-control Create_Customer" })
                        <div class="workTypeSelect" style="display:none;color:red;"></div>
                        @Html.HiddenFor(model => model.Status)
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.DateBooked)
                        @Html.TextBoxFor(m => m.DateBooked, "{0:d}", new { @class = "form-control Create_Customer", placeholder = " " })
                    </div>
                </div>
            </div>

            <div class="row">

                <div class="col-sm-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.JobCategory, new { @class = "label_left" })
                        @Html.EditorFor(m => m.JobCategory, new { htmlAttributes = new { @id = "JobCategory", @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.EstimatedHours)
                        @Html.EditorFor(m => m.EstimatedHours, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="col-md-3 OtrwReqDiv" style="display:none;">
                    <div class="form-group">
                        @Html.LabelFor(model => model.OTRWRequired)
                        @Html.EnumDropDownListFor(m => m.OTRWRequired, "(Select)", htmlAttributes: new { @id = "OtrwReuired", @class = "form-control Create_Customer" })
                    </div>
                </div>
                <div class="col-md-3 ddlassign1">
                    <div class="form-group">
                        @Html.LabelFor(model => model.AssignTo, new { id = "AssignOtrwLabel" })
                        @Html.DropDownListFor(m => m.AssignTo, Model.OTRWList, "Select OTRW User", new { @id = "tempAssignTo", @title = "Select OTRW User", @class = "ddljobslist form-control Create_Customer" })
                    </div>
                </div>
                @*@if (Model.MultipleAssignTo != null)
                    {*@
                <div class="col-md-3 ddlassign2" style="display:none;">
                    <div class="form-group">
                        @Html.LabelFor(model => model.AssignTo2, new { id = "AssignOtrwLabel" })
                        @Html.ListBoxFor(model => model.AssignTo2, Model.OTRWList, new { @title = "Select OTRW User", @id = "tempAssignTo2", @class = "ddlmultiselect", multiple = "multiple" })
                    </div>
                </div>

                <div class="col-md-3 timepick">
                    <div class="form-group">
                        @Html.LabelFor(model => model.StartTime)
                        @Html.TextBoxFor(m => m.StartTime, new { @class = "timepicker form-control Create_Customer", placeholder = " " })
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Supervisor)
                        @Html.DropDownListFor(m => m.Supervisor, Model.SuperVisorList, "Select", new { @id = "superVisor", @class = "form-control Create_Customer" })
                    </div>
                </div>
                @*<div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Category)
                            @Html.EnumDropDownListFor(m => m.Category, "(Select)", htmlAttributes: new { @class = "form-control Create_Customer" })
                        </div>
                    </div>*@
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PreferTime)
                        @Html.EnumDropDownListFor(m => m.PreferTime, "(Select)", htmlAttributes: new { @class = "form-control Create_Customer" })
                    </div>
                </div>
                @if (Model.SendJobEmail == FSM.Web.FSMConstant.Constant.SendJobEmail.SendConfirmationEmail)
                {
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ReSendJobEmail, new { id = "" })
                            @Html.EnumDropDownListFor(m => m.ReSendJobEmail, "(Select)", htmlAttributes: new { @id = "", @class = "form-control Create_Customer" })
                        </div>
                    </div>
                }
                else
                {
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.SendJobEmail, new { id = "" })
                            @Html.EnumDropDownListFor(m => m.SendJobEmail, "(Select)", htmlAttributes: new { @id = "", @class = "form-control Create_Customer" })
                        </div>
                    </div>
                }

                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.WorkOrderNumber, new { id = "" })
                        @Html.EditorFor(m => m.WorkOrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                @if (Model.GetUserRoles[0] == "Admin" || Model.GetUserRoles[0] == "OPERATIONS")
                {
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ActionStatus)
                            @Html.EnumDropDownListFor(m => m.ActionStatus, "(Select)", htmlAttributes: new { @class = "form-control Create_Customer" })
                        </div>
                    </div>
                }
                @*<div class="col-md-3">
                        <div class="form-group">
                            <label>Add Documents</label>
                            <input type="file" id="jobfileuploader" name="JobDocs" multiple />
                            @Html.ActionLink("View Documents", "", "", null, new { @class = "viewJobDocs", Jobid = Model.JobId.ToString() })
                        </div>
                    </div>*@
            </div>




            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.JobNotes, new { @class = "label_left" })
                        @Html.TextAreaFor(m => m.JobNotes, new { @class = "content1 form-control", placeholder = " " })
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.OperationNotes, new { @class = "label_left" })
                        @Html.TextAreaFor(m => m.OperationNotes, new { @class = "content2 form-control", placeholder = " " })
                    </div>
                </div>
            </div>
            @*gk*@
            <div class="row">
                <div class="col-sm-6 dvtextarea">
                    <div class="form-group">
                        @Html.LabelFor(model => model.OTRWjobNotes, new { @class = "label_left" })
                        @Html.TextAreaFor(m => m.OTRWjobNotes, new { @class = "content3 form-control", placeholder = " " })
                    </div>
                </div>
                @if (Model.Status == FSM.Web.FSMConstant.Constant.JobStatus.Completed)
                {
                <div class="col-sm-6">
                    <div class="job_details_outer collapseJobdiv divJobPerformancePartial">
                        @Html.Partial("_JobPerformanceSnapshot", Model)
                    </div>
                    <input id="btnJobPerformnce" class="btn btn-default black-btn" type="button" value="CALC TEST" />
                </div>
                }
            </div>
            @if (Model.ModifiedDate != null)
            {
                <div class="row">
                    <div class="col-sm-4">
                        <b>Last Updated By: </b>
                    </div>
                    <div class="col-sm-4">
                        <div>
                            <b>UserName :-</b>
                            @Html.DisplayFor(model => model.UserName)
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div>
                            <b>Date & Time :-</b>
                            @Html.DisplayFor(model => model.ModifiedDate)
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="row">
                    <div class="col-sm-4">
                        <b>Created By :- </b>
                    </div>
                    <div class="col-sm-4">
                        <div>
                            <b>UserName :-</b>
                            @Html.DisplayFor(model => model.UserName)
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div>
                            <b>Date & Time :-</b>
                            @Html.DisplayFor(model => model.CreatedDate)
                        </div>
                    </div>
                </div>
            }
            <div class="row">

            </div>
            @*end*@

        </div>
        <div class="buttons text-center">
            <input class="btn btn-default savejob" type="button" value="Save" />
            @if (Model.Status == FSM.Web.FSMConstant.Constant.JobStatus.Completed)
            {
                @Html.ActionLink("Call Back Job", "", "", new { Area = "Admin" }, new { @class = "btn btn-default editbtngrid", href = "javascript:void(0)", onclick = "callBackJob('" + Model.Id + "');" })
            }
            @Html.ActionLink("Manage Purchase Order", "ViewJobspurchaseOrder", "Job", new { @JobId = Model.Id.ToString() }, new { @class = "btn btn-default editbtngrid", @disable = "disable", Jobid = Model.Id.ToString() })

            @if (Model.InvoiceQuoteList.Count > 0)
            {
                foreach (var val in Model.InvoiceQuoteList)
                {
                    if (val.InvoiceType == "Invoice" && Model.JobType != FSM.Web.FSMConstant.Constant.JobType.Quote && Model.Status == FSM.Web.FSMConstant.Constant.JobStatus.Completed)  //Case 1
                    {
                        @Html.ActionLink("Invoice", "SaveInvoiceInfo", "Invoice", new { @id = val.Id.ToString() }, new { @class = "btn btn-default editbtngrid" })
                    }

                    if (val.InvoiceType == "Quote")  //Case 2
                    {
                        @Html.ActionLink("Quote", "SaveInvoiceInfo", "Invoice", new { @id = val.Id.ToString() }, new { @class = "btn btn-default editbtngrid" })
                    }

                    if (Model.Status == FSM.Web.FSMConstant.Constant.JobStatus.Completed && Model.JobType != FSM.Web.FSMConstant.Constant.JobType.Quote && val.InvoiceType != "Invoice")  //Case 3
                    {
                        @Html.ActionLink("Create Invoice", "CreateInvoice", "Invoice", new { @empjobid = Model.Id.ToString() }, new { @class = "btn btn-default editbtngrid", empjobid = Model.Id.ToString() })
                    }
                    if (Model.JobType == FSM.Web.FSMConstant.Constant.JobType.Quote && val.InvoiceType != "Quote" && val.InvoiceType == null)
                    {
                        @Html.ActionLink("Create Quote", "CreateInvoice", "Invoice", new { @empjobid = Model.Id.ToString() }, new { @class = "btn btn-default editbtngrid", empjobid = Model.Id.ToString() })
                    }
                }
            }
            else
            {
                if (Model.Status == FSM.Web.FSMConstant.Constant.JobStatus.Completed && Model.JobType != FSM.Web.FSMConstant.Constant.JobType.Quote)  //Case 3
                {
                    @Html.ActionLink("Create Invoice", "CreateInvoice", "Invoice", new { @empjobid = Model.Id.ToString() }, new { @class = "btn btn-default editbtngrid", empjobid = Model.Id.ToString() })
                }
                if (Model.JobType == FSM.Web.FSMConstant.Constant.JobType.Quote)
                {
                    @Html.ActionLink("Create Quote", "CreateInvoice", "Invoice", new { @empjobid = Model.Id.ToString() }, new { @class = "btn btn-default editbtngrid", empjobid = Model.Id.ToString() })
                }
            }


            @Html.ActionLink("Manage stock", "stockinfo", "Job", new { @Jobid = Model.Id.ToString() }, new { @class = "btn btn-default editbtngrid", Jobid = Model.Id.ToString() })
            <a class="btn btn-default" href="@Url.Action("CanecelJob", "Job", new { Area = "Employee" })">
                Cancel
            </a>
        </div>
    </div>
}
<div id="divShowCallBack"></div>
<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Job Documents</h4>
            </div>
            <div class="modal-body modaldoc">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade DateChangepopup" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
    <div class="modal-dialog modal-sm modal_width" role="document">
        <div class="modal-content border_radius">
            <div class="modal-header bgcolor_header" style="padding: 0px;">
                <button type="button" class="close_btn" data-dismiss="modal">&times;</button>
                <h5 class="modal-title delete_stock">Confirmation</h5>
            </div>
            <div class="modal-body viewemp_modal">
                <h5 class="alertmsg ">lorem ipsum dollar lorem ipsum dollar</h5>
                <div class="bottom_btn">
                    <button type="button" class="btn btn-primary btnYes black-btn">Yes</button>
                    <button type="button" class="btn btn-success btnNo black-btn">No</button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade NoDatePopUp" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
    <div class="modal-dialog modal-sm modal_width" role="document">
        <div class="modal-content border_radius">
            <div class="modal-header bgcolor_header" style="padding: 0px;">
                <button type="button" class="close_btn" data-dismiss="modal">&times;</button>
                <h5 class="modal-title delete_stock">Confirmation</h5>
            </div>
            <div class="modal-body viewemp_modal">
                <h5 class="alertmsg ">lorem ipsum dollar lorem ipsum dollar</h5>
                <div class="bottom_btn">
                    <button type="button" class="btn btn-primary btnYesCnfrm black-btn">Yes</button>
                    <button type="button" class="btn btn-success btnNoCnfrm black-btn">No</button>
                </div>
            </div>
        </div>
    </div>
</div>
<style>
    .job_details_outer {
        margin: 0 0px 30px;
        padding: 25px;
        width: 100%;
        float: left;
        border: 1px solid #e4e4e4;
        position: relative;
        min-height: 355px;
       top:22px;
    }

        .job_details_outer:after {
            position: absolute;
            content: "Job Performance SnapShot";
            top: -11px;
            background: #fff;
            width: 223px;
            text-align: center;
            font-size: 16px;
            font-weight: bold;
            left: 21px;
        }

    .collapseJobdiv {
        min-height: 380px !important;
    }
</style>
<script>
    $(document).ready(function () {
        $("#btnJobPerformnce").click(function () {
            var Jobid = $("#empJobId").val();



            $.get(common.SitePath + "/Employee/CustomerJob/GetJobPerFormanceData?Jobid=" + Jobid, function (data) {
                $('.divJobPerformancePartial').empty();
                $('.divJobPerformancePartial').append(data);
            });
        })
    });
</script>
@model FSM.Web.Areas.Employee.ViewModels.EmployeeJobListViewModel
@using GridMvc.Html
@using FSM.Web.Common;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@section scripts{
<script>
        var FSM = {};
        FSM.URL = '@Url.Action("CustomerJobInfoList", "job", new { @area = "Employee"})';
    FSM.SelectedVal=@Model.Employeejobsearchmodel.PageSize;
    FSM.HasGridRecords='@Model.EmployeeJoblist.Count()'
</script>
}

<section class="dashboard_section">

    <div class="dashboard_right_block outer_padding">
        <div class="list_heading">
            <h2>Job List </h2>
        </div>
        <br /><br />
        <div class="row">
        <div class="col-sm-12">

        <div class="employee_table">
            <div class="form-group form_width List_Width" style="float:left">
                    @Html.Partial("_CustomerJobInfoListSearch", Model.Employeejobsearchmodel)
                <div class="clearfix"></div>
            </div>

            <div class="emp_table padding20">
                <div class="drop_head_tab">
                    <div class="alert alert-success jobalert" style="display:none">
                        <strong>Success!</strong> Indicates a successful or positive action.
                    </div>
                    <div class="table-responsive">
                            @Html.Grid(Model.EmployeeJoblist).Columns(
                        columns =>
                        {
                        columns.Add(model => model.JobId).Titled("JID");
                        columns.Add(model => model.CustomerLastName).Titled("CO Last Name");
                        columns.Add(model => model.JobType).Titled("Job Type");
                        columns.Add(model => model.StreetName).Titled("Site Detail");
                        columns.Add(model => model.Suburb).Titled("Suburb");
                        columns.Add(model => model.InvoiceStatus).Titled("Invoice Status");
                        //columns.Add()
                        //.Encoded(false)
                        //.Sanitized(false)
                        //.SetWidth(30)
                        //.RenderValueAs(model => Html.ActionLink("Create Invoice", "CreateInvoice", "Invoice", new { @empjobId = model.EmployeeJobId.ToString() }, new { @class = "btn btn-default editbtngrid", empjobId = model.EmployeeJobId.ToString() })).Filterable(false).Titled("Action");
                        columns.Add()
                        .Encoded(false)
                        .Sanitized(false)
                        .SetWidth(30)
                        .RenderValueAs(o => CustomRenderingOfColumn(o.InvoiceId.ToString(), o.EmployeeJobId.ToString(), o.JobId.ToString(),o.InvoiceStatus.ToString())).Titled("Action");
                        }
                        ).WithPaging(Model.Employeejobsearchmodel.PageSize).Sortable(true)

                            <div style="float: right;">
                                <label>Page Size</label>
                                @Html.DropDownList("ddPageSize", new List<SelectListItem>
                                {
                                new SelectListItem { Text="5",Value="5"},
                                new SelectListItem { Text = "10", Value = "10" },
                                new SelectListItem { Text = "15", Value = "15" },
                                new SelectListItem { Text = "20", Value = "20" },
                                new SelectListItem { Text = "25", Value = "25" },
                                new SelectListItem { Text = "30", Value = "30" }
                                }, new { @class = "form-control" })
                            </div>
                    </div>
                </div>
            </div>
        </div><!--emp_table-->
        </div>
            </div>
        @helper CustomRenderingOfColumn(string invoiceid, string empid, string jobid,string invoicestatus)
        {
        if ( invoiceid.ToString()=="")
        {
        @Html.ActionLink("Create Invoice", "CreateInvoice", "Invoice", new { @empjobId = empid.ToString() }, new { @class = "btn btn-default editbtngrid", empjobId = jobid.ToString() })
        }
        @*else
        {
        @Html.ActionLink("Edit Invoice", "EditInvoice", "Invoice", new { @id = invoiceid.ToString() }, new { @class = "btn btn-default", empjobId = jobid.ToString() })

        }*@
        }
    </div>

</section>
<script src="~/Scripts/jquery-1.12.4.js"></script>
<script src="~/Areas/Employee/Scripts/CustomerjobInfoList.Js"></script>



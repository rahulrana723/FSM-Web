@model FSM.Web.Areas.Customer.ViewModels.CustomerSiteDetailViewModel

@{
    ViewBag.Title = "AddCustomerSiteDetail";
}

    <script src="~/Scripts/jquery.maskedinput-1.3.1.min_.js"></script>
    <script src="~/Areas/Customer/Scripts/AddCustomerSiteDetail.js"></script>

<div id="SitedetailErrorDiv" style="display:none;">
</div>

@using (Html.BeginForm("AddCustomerSiteDetail", "Customer", new { @area = "Customer" }, FormMethod.Post, new { @id = "formSiteDetail" }))
{
    @Html.AntiForgeryToken()
    <div class="general_form">
        <h3>Add Customer Site Detail</h3>
        <div class="form">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.CustomerGeneralInfoId, new { htmlAttributes = new { @class = "form-control" } })

            <div class="form-group">
                @Html.LabelFor(model => model.CustomerTitle)
                @Html.EnumDropDownListFor(model => model.CustomerTitle, "(Select)", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CustomerTitle, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName)
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName)
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNo1)
                @Html.EditorFor(model => model.PhoneNo1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNo1, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNo2)
                @Html.EditorFor(model => model.PhoneNo2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNo2, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNo3)
                @Html.EditorFor(model => model.PhoneNo3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNo3, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Spare1)
                @Html.EditorFor(model => model.Spare1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Spare1, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Spare2)
                @Html.EditorFor(model => model.Spare2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Spare2, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Spare3)
                @Html.EditorFor(model => model.Spare3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Spare3, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmailId)

                @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Unit)
                @Html.EditorFor(model => model.Unit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Unit, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Street)
                @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StreetName)
                @Html.EditorFor(model => model.StreetName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StreetName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StreetType)
                @Html.EnumDropDownListFor(model => model.StreetType, "(Select)", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StreetType, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Suburb)
                @Html.EditorFor(model => model.Suburb, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Suburb, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.State)
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PostalCode)
                @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MarkAsPreferred)
                @Html.CheckBoxFor(model => model.MarkAsPreferred, new { @class = "pad_top" })
                @Html.ValidationMessageFor(model => model.MarkAsPreferred, "", new { @class = "text-danger" })
            </div>

        </div>
        <div class="buttons text-center">
            <input id="btnSaveSiteDetail" class="btn btn-default" type="button" value="Save" />
            <input id="btnCancelSiteDetail" class="btn btn-default" type="button" value="Cancel" />
        </div>

    </div>
}



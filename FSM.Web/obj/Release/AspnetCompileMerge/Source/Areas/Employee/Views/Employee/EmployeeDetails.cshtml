@model FSM.Web.Areas.Employee.ViewModels.EmployeeDetailListViewModel
@using FSM.Web.Common;
@using GridMvc.Html
@{
    ViewBag.Title = "EmployeeDetails";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<meta name="viewport" content="width=device-width" />
<title>EmployeeDetails</title>
<section class="dashboard_section">
    <div class="dashboard_right_block outer_padding">
        <div class="list_heading">
            <h2>Employee List</h2>
        </div>
        <div class="employee_table paper-wrap bevel tlbr">
            <div id="GeneralInfoMsgDiv" style="display:none;text-align:left;">
            </div>
            <div class="alert alert-success jobalert" style="display:none">
                <strong>Success!</strong> Indicates a successful or positive action.
            </div>
            <div class="outer_box2 employee_gap">
                <div>
                    <div class="col-md-6 no-pad">
                        <div class="employee-search ">
                            @Html.Partial("_EmployeeDetailSearch", Model.EmployeeDetailInfo)
                        </div>
                    </div>
                    <div class="col-md-6 ">
                        <div class="new_emp_tab top_gap">

                            @Html.ActionLink("Rates", "ViewEmployeesRates", "Employee", new { @area = "Employee", @class = "btn btn-default pull-right" })

                            @Html.ActionLink("Add New Employee", "AddEmployee", "Employee", new { @area = "Employee", @class = "btn btn-default pull-right" })
                        </div>
                    </div>
                    <div>
                    </div>
                </div>
            </div><!--new_emp_tab-->

            <div class="emp_table">
                <div class="drop_head_tab">
                    <div class="table-responsive">
                        @Html.Grid(Model.EmployeeDetailList).SetRowCssClasses(
    item => item.EmployeeId == Guid.Empty ? string.Empty : "cssEditEmployee").Columns(
    columns =>
    {
        columns.Add(model => model.EmployeeId, true);
        columns.Add(model => model.Name).Titled("Name");
        columns.Add(model => model.UserName).Titled("User Name");
        columns.Add(model => model.EID).Titled("Employee Id");
        columns.Add(model => model.Role).Titled("Role");
        columns.Add(model => model.Mobile).Titled("Mobile No.");
        columns.Add(model => model.EmailAddress).Titled("Email Address");

        if (Model.EmployeeDetailInfo.GetUserRoles[0] == "Admin" || Model.EmployeeDetailInfo.GetUserRoles[0] == "OPERATIONS")
        {
            columns.Add()
            .Encoded(false)
            .Sanitized(false)
            .SetWidth(30)
            .RenderValueAs(model => Html.ActionLink("Edit", "EditEmployee", new { EmployeeId = model.EmployeeId }, new { @class = "btn btn-default editbtngrid" })).Filterable(false).Titled("Edit");

            columns.Add()
            .Encoded(false)
            .Sanitized(false)
            .SetWidth(30)
              .RenderValueAs(model => Html.ActionLink("Delete", "", new { }, new { @class = "deleteEmploye btn btn-default editbtngrid", href = "javascript:void(0)", onclick = "DeleteEmployee('" + model.EmployeeId.ToString() + "');", @EmployeeId = model.EmployeeId })).Filterable(false).Titled("Delete");
        }
    }
                           ).WithPaging(Model.EmployeeDetailInfo.PageSize).Sortable(true)
                        <div style="float: right;">
                            <label>Page Size</label>
                            @Html.DropDownList("ddPageSize", new List<SelectListItem>
                           {
                             new SelectListItem { Text="5",Value="5"},
                             new SelectListItem { Text = "10", Value = "10" },
                             new SelectListItem { Text = "15", Value = "15" },
                             new SelectListItem { Text = "20", Value = "20" },
                             new SelectListItem { Text = "25", Value = "25" },
                             new SelectListItem { Text = "30", Value = "30" }
                           }, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
            </div><!--emp_table-->
        </div>
    </div><!--dashboard_right_block-->
</section>
<script src="~/Scripts/jquery-1.12.4.min.js"></script>
@section scripts{

    <script>
        var FSM = {};
        FSM.URL = '@Url.Action("EmployeeDetails", new { @area = "Employee"})';
        FSM.SelectedVal=@Model.EmployeeDetailInfo.PageSize;
        FSM.EditEmployee='@Url.Action("EditEmployee", "Employee", new { @area = "Employee" })';
        FSM.HasGridRecords='@Model.EmployeeDetailList.Count()'
        FSM.HasGridRecords='@Model.EmployeeDetailList.Count()';
        var success='@TempData["Message"]';
        if (success != "" && success != undefined)
        {
            FSM.Message=success;
        }
        else
        {
            FSM.Message="";
        }
    </script>
}
<script src="~/Areas/Employee/Scripts/EmployeeDetail.js"></script>









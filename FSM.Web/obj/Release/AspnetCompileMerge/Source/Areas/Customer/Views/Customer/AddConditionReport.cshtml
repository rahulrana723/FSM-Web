@model FSM.Web.Areas.Customer.ViewModels.CustomerConditionReportViewModel
@{
    ViewBag.Title = "AddConditionReport";
}
<script src="~/Areas/Customer/Scripts/AddConditionReport.js"></script>

<div id="ConditionReportErrorDiv" style="display:none;">
</div>

@using (Html.BeginForm("AddConditionReport", "Customer", new { @area = "Customer" }, FormMethod.Post, new { @id = "formConditionReport" }))
{
    @Html.AntiForgeryToken()
    <div class="general_form">
        <h4>Add Condition Report</h4>
        <hr />
        <div class="form">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.CustomerGeneralInfoId, new { htmlAttributes = new { @class = "form-control" } })
            
            <div class="form-group">
                    @Html.LabelFor(model => model.RoofTilesSheets)
                    @Html.EnumDropDownListFor(m => m.RoofTilesSheets, "(Select)", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.RoofTilesSheets, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                    @Html.LabelFor(model => model.BargeCappings)
                    @Html.EnumDropDownListFor(m => m.BargeCappings, "(Select)", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BargeCappings, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                    @Html.LabelFor(model => model.RidgeCappings)
                    @Html.EnumDropDownListFor(m => m.RidgeCappings, "(Select)", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.RidgeCappings, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                    @Html.LabelFor(model => model.Valleys)
                    @Html.EnumDropDownListFor(m => m.Valleys, "(Select)", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Valleys, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                    @Html.LabelFor(model => model.Flashings)
                    @Html.EnumDropDownListFor(m => m.Flashings, "(Select)", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Flashings, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                    @Html.LabelFor(model => model.Gutters)
                    @Html.EnumDropDownListFor(m => m.Gutters, "(Select)", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Gutters, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                    @Html.LabelFor(model => model.DownPipes)
                    @Html.EnumDropDownListFor(m => m.DownPipes, "(Select)", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DownPipes, "", new { @class = "text-danger" })
            </div>
            </div>
        <div class="buttons text-center">
            <input id="btnSaveConditionReport" class="btn btn-default" type="button" value="Save" />
            <input id="btnCancelConditionReport" class="btn btn-default" type="button" value="Cancel" />
        </div>
        </div>
}
